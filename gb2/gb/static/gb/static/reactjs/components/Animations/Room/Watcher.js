/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./gb2/gb/static/gb/static/gltf/the_watcher/watcher.gltf 
Author: paulhoekstra (https://sketchfab.com/paulhoekstra)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/the-watcher-191e8d6b334e48e59362472ba52c9ab3
Title: The Watcher
*/

import React, { useEffect, useLayoutEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useLoader, useFrame } from '@react-three/fiber';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';


const WatcherModel = ({...props}) => {
  const statueRef = useRef();
  const scroll = useScroll();
  const { nodes, materials } = useLoader(GLTFLoader, 'staticfiles/gb/static/gltf/the_watcher/watcher.gltf');
  


  return (
    <group {...props} dispose={null} >
      <group position={[0, -5, 2]} rotation={[-1.567, 0, 0]}  >
        <mesh geometry={nodes.Cube_0.geometry} material={materials.Material} position={[0, 0, 3.079]} scale={0.567} />
        <mesh geometry={nodes.Cube001_0.geometry} material={materials.Root} position={[0, 0, 1.251]} scale={[0.318, 0.318, 1.303]} />
        <mesh geometry={nodes.Cube004_0.geometry} material={materials['Material.002']} position={[0.291, -0.165, 3.949]} rotation={[-0.896, -0.314, 1.813]} scale={[0.066, 0.086, 0.066]} />
        <mesh geometry={nodes.Cube012_0.geometry} material={materials['Material.002']} position={[-0.467, -0.169, 3.949]} rotation={[-0.905, -0.277, 1.782]} scale={[0.066, 0.086, 0.066]} />
        <mesh geometry={nodes.Cube006_0.geometry} material={materials['Material.002']} position={[-0.017, 0.223, 4.555]} rotation={[-0.02, 0, 0]} scale={[0.244, 0.129, 0.158]} />
        <mesh geometry={nodes.Cube009_0.geometry} material={materials['Material.002']} position={[-0.015, 0.034, 5.273]} rotation={[0.614, 0, 0]} scale={[0.273, 0.167, 0.273]} />
        <mesh geometry={nodes.Cube010_0.geometry} material={materials['Material.002']} position={[-0.017, -0.482, 5.212]} rotation={[0.159, 0, 0]} scale={[0.174, 0.137, 0.167]} />
        <mesh geometry={nodes.Cube011_0.geometry} material={materials['Material.002']} position={[0.442, -0.296, 5.213]} rotation={[-0.181, 0.018, -0.016]} scale={[0.089, 0.089, 0.34]} />
        <mesh geometry={nodes.Cube013_0.geometry} material={materials['Material.002']} position={[-0.582, 0.076, 4.93]} rotation={[0.223, 0.223, -0.503]} scale={0.095} />
        <mesh geometry={nodes.Cube020_0.geometry} material={materials['Material.002']} position={[-0.304, -0.524, 5.587]} rotation={[0.495, -0.214, 0.114]} scale={0.035} />
        <mesh geometry={nodes.Plane002_0.geometry} material={materials['Material.001']} position={[-0.305, 0.899, 6.253]} rotation={[0.557, 0.119, -0.4]} scale={[-0.041, 0.043, 0.041]} />
        <mesh geometry={nodes.Cube014_0.geometry} material={materials['Material.002']} position={[-0.007, -0.562, 5.919]} rotation={[0.143, 0, 0]} scale={[0.141, 0.126, 0.126]} />
      </group>
    </group>
  )
};

useGLTF.preload('staticfiles/gb/static/gltf/the_watcher/watcher.gltf');
export default WatcherModel;