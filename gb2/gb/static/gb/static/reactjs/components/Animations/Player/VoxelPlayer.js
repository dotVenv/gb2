/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./gb2/gb/static/gb/static/glb/voxelPlayer.glb 
*/

import React from 'react'
import { useGraph, useLoader, useFrame } from '@react-three/fiber';
import { useGLTF, useAnimations } from '@react-three/drei';
import { SkeletonUtils } from 'three-stdlib';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';

const VoxelPlayerModel = ({props, animPlaying}) => {
  const group = React.useRef()
  const { scene, animations } = useLoader(GLTFLoader,'staticfiles/gb/static/glb/voxelPlayer.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.25}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="unamed" geometry={nodes.unamed.geometry} material={materials.palettemat} skeleton={nodes.unamed.skeleton} />
        </group>
      </group>
    </group>
  )
};
export default VoxelPlayerModel;
useGLTF.preload('staticfiles/gb/static/glb/voxelPlayer.glb');
