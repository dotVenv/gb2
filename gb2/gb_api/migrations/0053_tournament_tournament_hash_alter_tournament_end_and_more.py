# Generated by Django 5.1 on 2025-02-12 02:07

import datetime
import django.db.models.deletion
import django_prometheus.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gb_api', '0052_remove_platform_tournaments_tournament_platforms_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='tournament',
            name='tournament_hash',
            field=models.CharField(blank=True, choices=[('4d6a6298-d65b-4b74-967e-459ee7c17bb4', '4d6a6298-d65b-4b74-967e-459ee7c17bb4'), ('ed3e4131-8589-46fc-b6bb-69f1890eee7f', 'ed3e4131-8589-46fc-b6bb-69f1890eee7f'), ('c03e70ff-9210-4888-b07a-06596d213c6f', 'c03e70ff-9210-4888-b07a-06596d213c6f')], max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='end',
            field=models.DateTimeField(default=datetime.datetime(2025, 2, 12, 21, 0, tzinfo=datetime.timezone.utc)),
        ),
        migrations.AlterField(
            model_name='tournament',
            name='start',
            field=models.DateTimeField(default=datetime.datetime(2025, 2, 12, 18, 0)),
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('points_earned', models.IntegerField(default=0)),
                ('rank_points_earned', models.IntegerField(default=0)),
                ('score', models.CharField(blank=True, max_length=25, null=True)),
                ('players', models.ManyToManyField(related_name='opponents', to='gb_api.accountpreference')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='current_tournament', to='gb_api.tournament')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_winner', to='gb_api.accountpreference')),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('Match'), models.Model),
        ),
        migrations.CreateModel(
            name='PlayerStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('fav_tournament', models.CharField(max_length=150)),
                ('fav_platform', models.CharField(max_length=25)),
                ('matches', models.ManyToManyField(blank=True, related_name='all_matches', to='gb_api.match')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='gb_api.playerstat')),
            ],
            options={
                'verbose_name_plural': 'Player Stats',
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('PlayerStat'), models.Model),
        ),
    ]
